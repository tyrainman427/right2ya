# Generated by Django 3.2.16 on 2023-06-16 07:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(default=0)),
                ('lng', models.FloatField(default=0)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('paypal_email', models.EmailField(blank=True, max_length=255)),
                ('fcm_token', models.TextField(blank=True)),
                ('car_make', models.CharField(blank=True, max_length=255)),
                ('car_model', models.CharField(blank=True, max_length=255)),
                ('plate_number', models.CharField(blank=True, max_length=255)),
                ('is_available', models.BooleanField(default=False)),
                ('average_rating', models.FloatField(default=0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='courier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='customer/avatars/')),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=50)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=255)),
                ('stripe_card_last4', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], default='medium', max_length=20)),
                ('quantity', models.IntegerField(default=1)),
                ('photo', models.ImageField(upload_to='job/photos/')),
                ('status', models.CharField(choices=[('creating', 'Creating'), ('processing', 'Processing'), ('ready', 'ready'), ('picking', 'Picking'), ('Delivering Order', 'Delivering'), ('completed', 'Completed'), ('reviewed', 'reviewed'), ('canceled', 'Canceled')], default='creating', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('pickup_address', models.CharField(blank=True, max_length=255)),
                ('pickup_lat', models.FloatField(default=0)),
                ('pickup_lng', models.FloatField(default=0)),
                ('pickup_name', models.CharField(blank=True, max_length=255)),
                ('pickup_phone', models.CharField(blank=True, max_length=50)),
                ('delivery_address', models.CharField(blank=True, max_length=255)),
                ('delivery_lat', models.FloatField(default=0)),
                ('delivery_lng', models.FloatField(default=0)),
                ('delivery_name', models.CharField(blank=True, max_length=255)),
                ('delivery_phone', models.CharField(blank=True, max_length=50)),
                ('duration', models.IntegerField(default=0)),
                ('distance', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('pickup_photo', models.ImageField(blank=True, null=True, upload_to='job/pickup_photos/')),
                ('pickedup_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_photo', models.ImageField(blank=True, null=True, upload_to='job/delivery_photos/')),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_date_time', models.DateField(blank=True, null=True)),
                ('delivery_time', models.TimeField(blank=True, null=True)),
                ('delivery_choice', models.CharField(choices=[('same_day', 'Same day delivery'), ('scheduled', 'Scheduled delivery')], default='same_day', max_length=20)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('delivery_fee', models.FloatField(default=0)),
                ('rated', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('courier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.courier')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('in', 'In'), ('out', 'Out')], default='in', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.job')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='rest_images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_profile', related_query_name='restaurant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_value', models.IntegerField(default=0)),
                ('review_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='core.courier')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_description', models.TextField(max_length=500)),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_images')),
                ('price', models.IntegerField(default=0)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to='core.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('couriers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.courier')),
                ('customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
                ('jobs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.job')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', related_query_name='employee', to='core.restaurant'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
